version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.8
  pre_build:
    commands:
      - aws --version
      - python --version
      - echo "Get Branch Name"
      - export BRANCH=$(echo $CODEBUILD_WEBHOOK_TRIGGER | sed -e 's/branch\///')
      - echo $BRANCH
  build:
    commands:
      - export IMAGE_NAME="aws-py-code-build"
      - export IMAGE_TAG=$(cat version.txt |  sed -n 's/^version=//p')
      - |
        if [ "$BRANCH" == "$REPO_PRIMARY_BRANCH" ]; then
          export IMAGE_TAG="${IMAGE_TAG}-M${CODEBUILD_BUILD_NUMBER}"
        elif grep -q 'bugfix/' <<< ${BRANCH}; then
          export IMAGE_TAG="${IMAGE_TAG}-BUGFIX-${CODEBUILD_BUILD_NUMBER}"
        elif grep -q 'hotfix/' <<< ${BRANCH}; then
          export IMAGE_TAG="${IMAGE_TAG}-HOTFIX-${CODEBUILD_BUILD_NUMBER}"
        else
          export IMAGE_TAG="${IMAGE_TAG}-SNAPSHOT-${CODEBUILD_BUILD_NUMBER}"
        fi
      - docker build --no-cache -t $IMAGE_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REPO_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo "Pushing the Docker images $ECR_REPO_URI:$IMAGE_TAG to remote account ECR repo"
      - aws ecr get-login-password 
      - docker login --username AWS --password-stdin $ECR_REPO_URI
      - docker push $ECR_REPO_URI:$IMAGE_TAG
      - echo "Build completed on $(date)"